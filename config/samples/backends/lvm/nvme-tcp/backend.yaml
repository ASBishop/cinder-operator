# This sample requires an LVM VG with the name of `cinder-volumes` to exist on the OpenShift node where cinder-volume runs
# It also requires that nvme-fabrics kernel module is running everywhere and that nvmet is running on the controller host
# The correct way to configure the load of additional kernel modules is using `MachineConfig` as shown in `nvme-fabrics.yaml`.yaml`.
# To create the LVM on CRC the sample also uses a `MachineConfig` using a systemd unit with file `lvm.yaml`
#
# ATTENTION:
# - Node where we want LVM to run needs to be labeled with openstack.org/cinder-lvm
# - After applying this OpenShift nodes will reboot, because of the `MachineConfig` changes and will take a while to recover.
apiVersion: core.openstack.org/v1beta1
kind: OpenStackControlPlane
metadata:
  name: openstack
spec:
  cinder:
    template:
      cinderVolumes:
        lvm-nvme-tcp:
          nodeSelector:
            openstack.org/cinder-lvm: ""
          customServiceConfig: |
            [lvm]
            volume_backend_name=lvm_nvme_tcp
            volume_driver=cinder.volume.drivers.lvm.LVMVolumeDriver
            target_helper=nvmet
            target_protocol=nvmet_tcp
            target_port=4420
            target_prefix=nvme-subsystem-1
            nvmeof_conn_info_version=2
            volume_group=cinder-volumes
            # This is the OCP host's static IP on the storage VLAN network
            target_ip_address=172.18.0.5
            # This is the OCP host's static IP on the tenant VLAN network
            target_secondary_ip_addresses = 172.19.0.5
